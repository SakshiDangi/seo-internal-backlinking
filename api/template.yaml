AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AI agent

  Sample SAM Template for ai-agent-template

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
    MemorySize: 1024
    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Resources:
  RouterFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Environment:
        Variables:
          LANGCHAIN_TRACING_V2: true
          LANGCHAIN_API_KEY: "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"
          LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
          LANGCHAIN_PROJECT: "LambdaProduction"
          STAGE: "prod"
      Policies:
        - Version: '2012-10-17'
          Statement:
              Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
      Architectures:
        - x86_64
    Metadata:
      Dockerfile: ./router_agent/Dockerfile
      DockerContext: .
  AgentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Environment:
        Variables:
          LANGCHAIN_TRACING_V2: true
          LANGCHAIN_API_KEY: "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"
          LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
          LANGCHAIN_PROJECT: "LambdaProduction"
          STAGE: "prod"
      Policies:
        - Version: '2012-10-17'
          Statement:
              Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
      Architectures:
        - x86_64
    Metadata:
      Dockerfile: ./agent/Dockerfile
      DockerContext: .
  ToolAgentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Environment:
        Variables:
          LANGCHAIN_TRACING_V2: true
          LANGCHAIN_API_KEY: "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"
          LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
          LANGCHAIN_PROJECT: "LambdaProduction"
          STAGE: "prod"
      Policies:
        - Version: '2012-10-17'
          Statement:
              Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
      Architectures:
        - x86_64
    Metadata:
      Dockerfile: ./tool_agent/Dockerfile
      DockerContext: .
  CustomToolAgentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Environment:
        Variables:
          LANGCHAIN_TRACING_V2: true
          LANGCHAIN_API_KEY: "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"
          LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
          LANGCHAIN_PROJECT: "LambdaProduction"
          STAGE: "prod"
      Policies:
        - Version: '2012-10-17'
          Statement:
              Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
      Architectures:
        - x86_64
    Metadata:
      Dockerfile: ./custom_tool/Dockerfile
      DockerContext: .
  RAGAgentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Environment:
        Variables:
          LANGCHAIN_TRACING_V2: true
          LANGCHAIN_API_KEY: "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"
          LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
          LANGCHAIN_PROJECT: "LambdaProduction"
          STAGE: "prod"
          WEAVIATE_CLUSTER_URL: "3.108.117.101"
          WEAVIATE_API_KEY: "kRnBmDniHdO3Scxa2VrLuEq8xSRwiaTXyGGN"
      Policies:
        - Version: '2012-10-17'
          Statement:
              Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
      Architectures:
        - x86_64
    Metadata:
      Dockerfile: ./rag_agent/Dockerfile
      DockerContext: .
  FeedbackAgentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Environment:
        Variables:
          LANGCHAIN_TRACING_V2: true
          LANGCHAIN_API_KEY: "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"
          LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
          LANGCHAIN_PROJECT: "LambdaProduction"
          STAGE: "prod"
      Policies:
        - Version: '2012-10-17'
          Statement:
              Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
      Architectures:
        - x86_64
    Metadata:
      Dockerfile: ./feedback_agent/Dockerfile
      DockerContext: .

Outputs:
# ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
# Find out more about other implicit resources you can reference within SAM
# https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
AgentFunction:
  Description: Agent Lambda Function ARN
  Value: !GetAtt AgentFunction.Arn
AgentFunctionIamRole:
  Description: Implicit IAM Role created for Agent function
  Value: !GetAtt AgentFunctionRole.Arn
ToolAgentFunction:
  Description: Tool Agent Lambda Function ARN
  Value: !GetAtt ToolAgentFunction.Arn
ToolAgentFunctionIamRole:
  Description: Implicit IAM Role created for Tool Agent function
  Value: !GetAtt ToolAgentFunction.Arn
